# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

strategy:
  maxParallel: 4
  matrix:
    Examples:
      cmakeExample: ON
      cmakeTest: OFF
      cmakeUtil: OFF
      cmakePython: OFF
    Unitary-tests:
      cmakeExample: OFF
      cmakeTest: ON
      cmakeUtil: OFF
      cmakePython: OFF
    Utilities:
      cmakeExample: OFF
      cmakeTest: OFF
      cmakeUtil: ON
      cmakePython: OFF
    Python-module:
      cmakeExample: OFF
      cmakeTest: OFF
      cmakeUtil: OFF
      cmakePython: ON

workspace:
  clean: all

steps:
- script: 'vcpkg install eigen3:x64-windows'
  displayName: vcpkg install dependencies

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.6'
    architecture: 'x64'

- script: python -m pip install --upgrade pip setuptools numpy matplotlib scipy Cython pytest sphinx sphinxcontrib-bibtex
  displayName: 'Install tools'

- task: CMake@1
  displayName: 'CMake solution GUDHIdev.sln'
  inputs:
    workingDirectory: 'build'
    cmakeArgs: '.. -G "Visual Studio 15 2017 Win64" -DCMAKE_TOOLCHAIN_FILE="C:\vcpkg\scripts\buildsystems\vcpkg.cmake" -DWITH_GUDHI_EXAMPLE=$(cmakeExample) -DWITH_GUDHI_TEST=$(cmakeTest) -DWITH_GUDHI_UTILITIES=$(cmakeUtil) -DWITH_GUDHI_PYTHON=$(cmakePython)'

- task: MSBuild@1
  displayName: 'Build solution GUDHIdev.sln'
  inputs:
    workingDirectory: 'build'
    solution: 'build/GUDHIdev.sln'
    msbuildArguments: '/m /p:Configuration=Release /p:Platform=x64'

- script: ctest -j 1 -C Release -V
  workingDirectory: build
  displayName: 'CTest solution GUDHIdev.sln'
