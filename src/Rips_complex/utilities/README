# Rips_complex #

## `rips_persistence` ##
This program computes the persistent homology with coefficient field *Z/pZ* of a Rips complex defined on a set of input points. The output diagram contains one bar per line, written with the convention:

`p dim b d`

where `dim` is the dimension of the homological feature, `b` and `d` are respectively the birth and death of the feature, and `p` is the characteristic of the field *Z/pZ* used for homology coefficients (`p = p1*...*pr` is the product of prime numbers *pi* such that the homology feature exists in homology with *Z/piZ* coefficients).

**Usage**
`rips_persistence [options] <OFF input file>`

**Allowed options**

* `-h [ --help ]` Produce help message
* `-r [ --max-edge-length ]` (default = inf) Maximal length of an edge for the Rips complex construction.
* `-d [ --cpx-dimension ]` (default = 1) Maximal dimension of the Rips complex we want to compute.
* `-p [ --field-charac ]` (default = 11)     Characteristic p of the coefficient field Z/pZ for computing homology.
* `-m [ --min-persistence ]` (default = 0) Minimal lifetime of homology feature to be recorded. Enter a negative value to see zero length intervals.

**Example 1 with Z/2Z coefficients**
`rips_persistence ../../data/points/tore3D_1307.off -r 0.25 -m 0.5 -d 3 -p 2`

outputs:
```
2  0 0 inf
2  1 0.0983494 inf 
2  1 0.104347 inf 
2  2 0.138335 inf 
```

**Example 2 with Z/3Z coefficients**

rips_persistence ../../data/points/tore3D_1307.off -r 0.25 -m 0.5 -d 3 -p 3

outputs:
```
3  0 0 inf
3  1 0.0983494 inf
3  1 0.104347 inf
3  2 0.138335 inf
```




## `rips_distance_matrix_persistence` ##
Same as `rips_persistence` but taking an distance matrix as input.

**Example**
`rips_distance_matrix_persistence data/distance_matrix/full_square_distance_matrix.csv -r 15 -d 3 -p 3 -m 0`

outputs:
```
The complex contains 46 simplices 
   and has dimension 3 
3  0 0 inf 
3  0 0 8.94427 
3  0 0 7.28011 
3  0 0 6.08276 
3  0 0 5.83095 
3  0 0 5.38516 
3  0 0 5 
3  1 11 12.0416 
3  1 6.32456 6.7082 
```
